name: .NET CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore dependencies
        run: dotnet restore; dotnet build FootballGameData.sln --configuration Release --no-restore
      - name: Test with coverage
        run: dotnet test FootballGameData.sln --verbosity normal --collect:"XPlat Code Coverage"
      - name: "Debug: List all files recursively"
        run: |
          echo "Listing all files recursively:"
          Get-ChildItem -Recurse -File | Select-Object FullName
      - name: List coverage files
        run: |
          echo "Listing all coverage files:"
          Get-ChildItem -Recurse -File | Where-Object { $_.Name -like '*coverage*' } | Select-Object FullName
      - name: Report coverage
        if: success()
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
        with:
          reports: 'Football.Test/TestResults/**/coverage.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'Html;SummaryXml'
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coveragereport
      - name: Add coverage badge to PR
        if: github.event_name == 'pull_request'
        run: |
          $coverage = Get-Content -Raw -Path coveragereport/Summary.xml | Select-String -Pattern '<line-rate>(.*?)</line-rate>' | ForEach-Object { $_.Matches[0].Groups[1].Value }
          $percent = [math]::Round([double]$coverage * 100, 2)
          echo "## :bar_chart: Cobertura de c√≥digo: $percent%" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
      - name: Publish coverage summary to gh-pages
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          mkdir gh-pages
          cp coveragereport/Summary.xml gh-pages/coverage-summary.xml
          cd gh-pages
          git init
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b gh-pages
          git add .
          git commit -m "Update coverage summary [skip ci]"
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push --force origin gh-pages
          
